<?xml version="1.0" encoding="UTF-8"?>
<project name="papps-app" basedir=".">

  <dirname property="build.basedir" file="${ant.file.papps-app}"/>
  <property name="root.basedir" location="${build.basedir}/.."/>

  <!-- Import common build.xml and load properties -->
  <import file="${build.basedir}\build-common.xml"/>
  <property file="${build.basedir}\build-app.properties"/>

  <!-- Targets -->
  <target name="release.app" depends="init">
    <randomstring property="app.buildid"/>
    <echo message="Generated build id: ${app.buildid}"/>
    <if>
      <not><equals arg1="${atf.url.ia32}" arg2=""/></not>
      <then>
        <antcall target="release.arch">
          <param name="atf.arch" value="ia32"/>
          <param name="atf.url" value="${atf.url.ia32}"/>
          <param name="go.arch" value="386"/>
        </antcall>
        <echo file="${tmp.path}\${app.buildid}" append="false">${app.buildid}</echo>
      </then>
    </if>
    <if>
      <not><equals arg1="${atf.url.x64}" arg2=""/></not>
      <then>
        <antcall target="release.arch">
          <param name="atf.arch" value="x64"/>
          <param name="atf.url" value="${atf.url.x64}"/>
          <param name="go.arch" value="amd64"/>
        </antcall>
        <echo file="${tmp.path}\${app.buildid}" append="false">${app.buildid}</echo>
      </then>
    </if>
    <delete file="${tmp.path}\${app.buildid}"/>
  </target>

  <target name="release.arch" depends="start, init, clear, download, extract, filterset, build">
    <echo message="Packaging release..."/>

    <!-- atf.executionstub -->
    <if>
      <available file="${nupkg.path}\${atf.libfolder}\${atf.executionstub}" type="file"/>
      <then>
        <copy file="${nupkg.path}\${atf.libfolder}\${atf.executionstub}" tofile="${build.path}\${atf.id}.exe" overwrite="true"/>
        <copy todir="${build.path}\app-${app.version}">
          <fileset dir="${atf.libpath}" excludes="${atf.executionstub}"/>
        </copy>
      </then>
      <else>
        <copy todir="${build.path}\app-${app.version}">
          <fileset dir="${atf.libpath}"/>
        </copy>
      </else>
    </if>

    <!-- Move Squirrel Update.exe -->
    <if>
      <available file="${extract.path}\Update.exe" type="file"/>
      <then>
        <copy todir="${build.path}" file="${extract.path}\Update.exe"/>
        <exec executable="${rcedit}" failonerror="true" dir="${build.path}">
          <arg value="${build.path}/Update.exe"/>
          <arg value="--set-icon"/>
          <arg value="${res.path}/app.ico"/>
        </exec>
      </then>
    </if>

    <!-- Init nupkg package infos / updates folder -->
    <mkdir dir="${build.path}\packages"/>
    <copy file="${extract.path}\RELEASES" todir="${build.path}\packages" failonerror="false"/>

    <!-- Add portapp REAMDE / CHANGELOG -->
    <copy file="${app.basedir}\README.md" todir="${build.path}" overwrite="true"/>
    <copy file="${app.basedir}\CHANGELOG.md" todir="${build.path}" overwrite="true"/>

    <!-- Copy portable executable and app ico -->
    <copy file="${tmp.path}\${papp.id}.exe" todir="${build.path}" overwrite="true"/>
    <copy file="${res.path}\app.ico" todir="${build.path}" overwrite="true"/>

    <!-- version.dat for CI -->
    <echo message="Writing version.dat..."/>
    <echo file="${tmp.path}\version.dat" append="false">${app.version}-${app.release}</echo>

    <!-- Init release files -->
    <echo message="Creating release files"/>
    <copy file="${tmp.path}\${papp.id}.exe" tofile="${release.path}\${papp.id}-${atf.arch}.exe" overwrite="true"/>
    <copy file="${atf.setupdest}" tofile="${release.path}\${atf.setupname}-${atf.arch}-${app.version}.exe" overwrite="true"/>
    <copy file="${atf.nupkg}" tofile="${release.path}\${atf.id}-${atf.arch}-${app.version}-full.nupkg" overwrite="true"/>

    <!-- .7z release -->
    <sevenzip src="${build.path}/*" dest="${release.path}\${papp.id}-${atf.arch}-${app.version}-${app.release}.7z" format="7z"/>

    <!-- setup.exe release -->
    <echo message="Building setup"/>
    <copy todir="${setup.path}\src">
      <fileset dir="${build.path}"/>
    </copy>
    <copy todir="${setup.path}">
      <fileset dir="${core.res.path}">
        <include name="setup*"/>
      </fileset>
      <fileset dir="${res.path}">
        <include name="setup*"/>
        <include name="papp.ico"/>
      </fileset>
    </copy>
    <copy file="${app.basedir}\LICENSE" tofile="${setup.path}\license.txt"/>
    <copy file="${core.res.path}\setup.iss" tofile="${setup.path}\setup.iss" overwrite="true">
      <filterset>
        <filter token="APP_ID" value="${papp.id}"/>
        <filter token="APP_GUID" value="${papp.guid}"/>
        <filter token="APP_NAME" value="${papp.name}"/>
        <filter token="APP_VERSION" value="${app.version}-${app.release}"/>
        <filter token="APP_URL" value="${papp.url}"/>
        <filter token="PUBLISHER" value="${publisher}"/>
      </filterset>
    </copy>
    <exec executable="${iscc}" dir="${setup.path}" failonerror="true">
      <arg value="/O${release.path}"/>
      <arg value="/F${papp.id}-${atf.arch}-${app.version}-${app.release}-setup"/>
      <arg value="setup.iss"/>
    </exec>
  </target>

  <target name="download">
    <echo message="Downloading ${atf.id}..."/>
    <property name="atf.setupdest" location="${tmp.path}\${atf.setupname}-${atf.arch}.exe"/>
    <get dest="${atf.setupdest}" src="${atf.url}" skipexisting="false"/>
  </target>

  <target name="extract">
    <echo message="Extracting ${atf.setupdest}..."/>
    <unsevenzip src="${atf.setupdest}" dest="${extract.path}"/>

    <first id="first.nupkg">
      <fileset dir="${extract.path}" includes="*.nupkg"/>
    </first>
    <condition property="atf.nupkg" value="${toString:first.nupkg}">
      <available file="${toString:first.nupkg}" type="file"/>
    </condition>
    <fail unless="atf.nupkg" message="Nupkg file not found"/>
    <echo message="Nupkg found : ${atf.nupkg}"/>

    <unsevenzip src="${atf.nupkg}" dest="${nupkg.path}"/>
    <condition property="atf.libpath" value="${nupkg.path}\${atf.libfolder}">
      <available file="${nupkg.path}\${atf.libfolder}\${atf.id}.exe" type="file"/>
    </condition>
    <fail unless="atf.libpath" message="Artefact lib path not found"/>

    <echo message="Metadata found:"/>
    <xmlproperty file="${nupkg.path}/${atf.id}.nuspec" collapseAttributes="true"/>
    <echo message="* ID      : ${package.metadata.id}"/>
    <echo message="* Title   : ${package.metadata.title}"/>
    <echo message="* Version : ${package.metadata.version}"/>
    <var name="app.version" value="${package.metadata.version}"/>
  </target>

</project>
