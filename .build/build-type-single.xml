<?xml version="1.0" encoding="UTF-8"?>
<project name="papps-type-single" basedir=".">

  <!-- Check required properties -->
  <fail unless="app.version" message="Property 'app.version' must be defined before loading ${ant.file.papps-type-single}"/>
  <fail unless="atf.id" message="Property 'atf.id' must be defined before loading ${ant.file.papps-type-single}"/>

  <dirname property="build.basedir" file="${ant.file.papps-type-single}"/>
  <property name="root.basedir" location="${build.basedir}/.."/>

  <!-- Import common build.xml and load properties -->
  <import file="${build.basedir}\build-common.xml"/>
  <property file="${build.basedir}\build-type-single.properties"/>

  <!-- Properties -->
  <property name="extract.path" value="${tmp.path}\extract"/>

  <!-- Targets -->
  <target name="init" depends="papps-common.init">
    <delete dir="${extract.path}"/>
    <mkdir dir="${extract.path}"/>
  </target>

  <target name="release.arch" depends="start, init, clear, download, copy, filterset, build">
    <!-- Preparing before packaging -->
    <antcall target="prepare"/>

    <!-- Add portapp README / CHANGELOG -->
    <copy file="${app.basedir}\README.md" todir="${build.path}" overwrite="true"/>
    <copy file="${app.basedir}\CHANGELOG.md" todir="${build.path}" overwrite="true"/>

    <!-- Copy portable executable -->
    <copy todir="${build.path}" overwrite="true">
      <fileset dir="${tmp.path}" defaultexcludes="no">
        <include name="${papp.id}*exe"/>
      </fileset>
    </copy>

    <!-- version.dat for CI -->
    <echo message="Writing version.dat..."/>
    <echo file="${tmp.path}\version.dat" append="false">${app.version}-${app.release}</echo>

    <!-- Init release files -->
    <echo message="Creating release files"/>
    <if>
      <not><equals arg1="${atf.win3264.url}" arg2=""/></not>
      <then>
        <copy todir="${release.path}" overwrite="true">
          <fileset dir="${tmp.path}" defaultexcludes="no">
            <include name="${papp.id}*exe"/>
          </fileset>
        </copy>
      </then>
      <else>
        <copy file="${tmp.path}\${papp.id}.exe" tofile="${release.path}\${papp.id}-${atf.arch}.exe" overwrite="true"/>
      </else>
    </if>
    <if>
      <equals arg1="${debug}" arg2="false"/>
      <then>
        <move file="${atf.original}" tofile="${release.path}\${atf.filename}${atf.ext}" overwrite="true"/>
      </then>
      <else>
        <copy file="${atf.original}" tofile="${release.path}\${atf.filename}${atf.ext}" overwrite="true"/>
      </else>
    </if>

    <echo message="Packaging release..."/>
    <if>
      <not><equals arg1="${atf.win3264.url}" arg2=""/></not>
      <then>
        <property name="release.7z.filename" value="${papp.id}-${app.version}-${app.release}.7z"/>
        <property name="release.setup.filename" value="${papp.id}-${app.version}-${app.release}-setup"/>
      </then>
      <else>
        <property name="release.7z.filename" value="${papp.id}-${atf.arch}-${app.version}-${app.release}.7z"/>
        <property name="release.setup.filename" value="${papp.id}-${atf.arch}-${app.version}-${app.release}-setup"/>
      </else>
    </if>

    <!-- .7z release -->
    <if>
      <istrue value="${papp.out.7z}"/>
      <then>
        <sevenzip src="${build.path}/*" dest="${release.path}\${release.7z.filename}" format="7z"/>
      </then>
    </if>

    <!-- setup.exe release -->
    <if>
      <istrue value="${papp.out.exe}"/>
      <then>
        <echo message="Building setup"/>
        <copy todir="${setup.path}">
          <fileset dir="${core.res.path}" defaultexcludes="no">
            <include name="setup*"/>
          </fileset>
          <fileset dir="${res.path}" defaultexcludes="no">
            <include name="setup*"/>
            <include name="papp.ico"/>
          </fileset>
        </copy>
        <copy file="${app.basedir}\LICENSE" tofile="${setup.path}\license.txt"/>
        <copy file="${core.res.path}\setup.iss" todir="${setup.path}" overwrite="true">
          <filterset>
            <filter token="ISS_COMPRESSION" value="${innosetup.comp}"/>
            <filter token="APP_SRC" value="${build.path}"/>
            <filter token="APP_NAME" value="${app.name}"/>
            <filter token="APP_HOMEPAGE" value="${app.homepage}"/>
            <filter token="PAPP_ID" value="${papp.id}"/>
            <filter token="PAPP_GUID" value="${papp.guid}"/>
            <filter token="PAPP_VERSION" value="${app.version}-${app.release}"/>
            <filter token="PAPP_URL" value="${papp.url}"/>
            <filter token="PAPP_FOLDER" value="${papp.folder}"/>
            <filter token="PAPP_PUBLISHER" value="${publisher}"/>
          </filterset>
        </copy>
        <exec executable="${iscc}" dir="${setup.path}" failonerror="true">
          <arg value="/O${release.path}"/>
          <arg value="/F${release.setup.filename}"/>
          <arg value="setup.iss"/>
        </exec>
      </then>
    </if>

    <!-- checksum -->
    <hashfolder folder="${release.path}"/>
  </target>

  <target name="download">
    <echo message="Downloading ${atf.id}..."/>
    <property name="atf.original" location="${tmp.path}\${atf.filename}${atf.ext}"/>
    <get dest="${atf.original}" src="${atf.url}" skipexisting="true" verbose="on"/>
  </target>

  <target name="copy">
    <echo message="Copying ${atf.original}..."/>
    <copy file="${atf.original}" tofile="${build.path}\${papp.folder}\${single.filename}"/>
  </target>

</project>
